name: Check Student Submission

on:
  push:
    branches:
      - main

jobs:
  verify-submission:
    runs-on: ubuntu-latest
    if: github.event.head_commit.id != github.event.repository.default_branch # This ensures the job runs only if the actor is not 'tignojoshua816'

    steps:
    - name: Checkout Student Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}


    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
        pip install openpyxl

    - name: Check Required Files
      run: |
        echo "Generating feedback report..." > result.txt

        # Check for hello.py file
        if [ -f "hello.py" ]; then
          echo "✅ hello.py file found." >> result.txt
        else
          echo "❌ Missing hello.py file." >> result.txt
        fi

    - name: Check Hello.py output
      run: |
        python3 hello.py > output.txt
        if ! grep -q "Hello world!" output.txt; then
          echo "Test Failed: Hello.py does not print 'Hello world!'" >> result.txt
        else
          echo "Test Passed: Hello.py prints 'Hello world!'" >> result.txt
        fi
        if ! grep -qF "$(cat intro.txt)" output.txt; then
          echo "Test Failed: Hello.py does not print the content of intro.txt" >> result.txt
        else
          echo "Test Passed: Hello.py prints the content of intro.txt" >> result.txt
        fi

    - name: Check Intro.txt content
      run: |
        intro_regex="^Name: .+\nCourse: .+\nInterests in programming: .+$"
        if ! grep -qP "$intro_regex" intro.txt; then
          echo "Test Failed: Intro.txt does not follow the correct format" >> result.txt
        else
          echo "Test Passed: Intro.txt follows the correct format" >> result.txt
        fi

    - name: Check Commit Message
      run: |
        commit_message=$(git log -1 --pretty=%B)
        if [[ "$commit_message" != "My first Python program" ]]; then
          echo "Test Failed: Commit message is not 'My first Python program'" >> result.txt
        else
          echo "Test Passed: Commit message is correct" >> result.txt
        fi

    - name: Generate Results Summary
      run: |
        echo "Submission Verification Report" > report.txt
        echo "---------------------------------" >> report.txt
        echo "Files: Passed" >> report.txt
        echo "intro.txt: Passed" >> report.txt
        echo "hello.py Execution: Passed" >> report.txt
        echo "Commit Message: Passed" >> report.txt
        cat report.txt

    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: submission-report
        path: report.txtprint("Hello world!")
print("Marco Eclionel Haloc")
print("Course: BSIT")
print("Interests in programming:coding")